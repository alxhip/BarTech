
import java.awt.Dimension;
import java.awt.Event;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.UnsupportedLookAndFeelException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class Table extends javax.swing.JFrame {

    /**
     * Creates new form Table
     */
    public Table(String username, LogIn login, Connection con) {
        initComponents();
        tableInstance=this;
        this.username = username; 
        Table.con=con;
        showTableForUser();
        this.login = login;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitButton.setBackground(new java.awt.Color(255, 255, 255));
        exitButton.setText("Dil");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        mainPanel.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(883, 0, 110, 70));

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 20));
        mainPanel.add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 77, 880, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        ((Window) login).setVisible(true); // go back in Login frame
        this.setVisible(false);

    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Table("username", new LogIn(), DriverManager.getConnection("jdbc:sqlite:C:/SQLite/BarTech.db")).setVisible(true);
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException | SQLException ex) {
                    Logger.getLogger(Table.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel tablePanel;
    // End of variables declaration//GEN-END:variables
    private String username;
    private Menu one, two, three, four;
    private LogIn login;
    private static Connection con;
    private PreparedStatement ps;
    private Statement st;
    private ResultSet rs;
    private JButton [] tableButton;
    private Menu [] menuInstance ;
    private Table tableInstance;
   
    
    private void showTableForUser()
    {
        try {
            st= con.createStatement();
            rs= st.executeQuery("Select count(*) from [Table]");
            int rowsNumber = rs.getInt(1);
            st.close();
            tableButton = new JButton [rowsNumber];
            menuInstance = new Menu[rowsNumber];
            rs.close();
            ps=con.prepareStatement("Select t.code, u.id from [Table] t left join M_User_Table mut on t.ID=mut.Table_ID left join [User] u on mut.User_ID=u.ID and u.UserName =?");
            ps.setString(1, username);
            rs=ps.executeQuery();
            int rowCount=0;
            while (rs.next())
            {
                tableButton[rowCount]= new JButton (rs.getString(1));
                tableButton[rowCount].setPreferredSize(new Dimension(70,70));
                int userID=rs.getInt(2); // used to check if the table is assigned to the current user.
                if (rs.wasNull())
                {
                    tableButton[rowCount].setEnabled(false);
                    
                }
                else 
                {   int currentRow= rowCount;
                    menuInstance[currentRow]= new Menu (username, currentRow, tableInstance, con);
                    tableButton[rowCount].addActionListener(new ActionListener(){
                        public void actionPerformed (ActionEvent e)
                        {
                            menuInstance[currentRow].setVisible(true);
                            tableInstance.setVisible(false);
                        }
                    });
                }
                tablePanel.add(tableButton[rowCount]);
                rowCount++;
            }
             rs.close();
             ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(Table.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }
    
}
